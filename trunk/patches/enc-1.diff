Index: ghafasclient.py
===================================================================
--- ghafasclient.py	(revision 170)
+++ ghafasclient.py	(working copy)
@@ -58,7 +58,7 @@
 BAHN_BASE_URL = 'http://reiseauskunft.bahn.de'
 BAHN_QUERY_URL = BAHN_BASE_URL + '/bin/query.exe/d'
 
-re_eur = re.compile(r'([0-9]+,[0-9]+)&nbsp;EUR')
+re_eur = re.compile(r'([0-9]+[,,][0-9]+)(\s+|&nbsp;)EUR')
 
 archive_pages = False
 
@@ -245,12 +245,15 @@
             )
 
     def __repr__(self):
+        print self.st_arr
+        print type(self.st_arr)
+
         return ';'.join((
             self.st_dep,
-            format_time('%d.%m.%y %H:%M', self.dep_time),
+            format_time('%Y%m%d-%H%M', self.dep_time),
             ','.join(self.trains),
             self.st_arr,
-            format_time('%d.%m.%y %H:%M', self.arr_time),
+            format_time('%Y%m%d-%H%M', self.arr_time),
             self.duration, self.changes,
             repr(self.fare_n), repr(self.fare_s),
             ))
@@ -280,7 +283,7 @@
     def __init__(self, url):
         self.response = urlopen(url)
         self.content = self.response.read()
-        self.soup = BeautifulSoup(self.content)
+        self.soup = BeautifulSoup(self.content, convertEntities=BeautifulSoup.HTML_ENTITIES)
 
         progress_list = self.soup.find(
                 'ul', attrs = {'class' : re.compile('process-list')}
@@ -426,11 +429,22 @@
             # trains
             departure_cols[6].a.contents[-1],
             )
-        conn = [urllib2.unquote(i.replace('&nbsp;', '').strip()) for i in conn]
+            
+        def fixws(s):
+            if s:
+                return s.replace(u'\xc2\xa0', ' ').strip()
+            return s
+            
+        cann = map(fixws, conn)
+        conn = [urllib2.unquote(i) for i in conn]
+
         conn = Connection(*conn)
         
         farePep = departure_row.find('td', attrs = {'class' : re.compile('farePep')})
         fareStd = departure_row.find('td', attrs = {'class' : re.compile('fareStd')})
+        farePep = fixws(farePep)
+        farestd = fixws(fareStd)
+
         
         conn.fare_s = self.parse_fare(farePep)
         conn.fare_n = self.parse_fare(fareStd)
@@ -451,12 +465,29 @@
             if incident.contents[0] == MARK_LINK_BOOKING:
                 url = incident['href']
 
-        m = re_eur.search(str(content.contents[0]))
-        if not m and content.a:
-            m = re_eur.search(str(content.a.contents[0]))
+        def f(c):
+            print c
+            if c:
+                return str(c).replace(' ', '_')
+            return c
+            
+        ccc = map(f, content.contents)
+        print ccc
 
+        m = re_eur.search(str(content.contents))
         if m:
             return Fare(m.group(1), url=url)
+        if content.span:
+            print 'span', content.span.contents[0]
+            m = re_eur.search(str(content.span.contents))
+            if m:
+                return Fare(m.group(1), url=url)
+        if content.a:
+            print 'a', content.a.contents[0]
+            m = re_eur.search(str(content.a.contents))
+            if m:
+                return Fare(m.group(1), url=url)
+
         return Fare()
 
     def get_link_later(self):
@@ -566,13 +597,13 @@
     try:
         logging.info('Run query...')
         result = request_timetable_page(travelData)
-        #show_resolved_yourtimetable_page(result)
+        show_resolved_yourtimetable_page(result)
 
         logging.info('Resolve query...')
         result = get_resolved_timetable_page(result)
 
         for c in result.connections:
-            print repr(c)
+            print unicode(c)
 
         timetable = result.connections
 
@@ -595,7 +626,7 @@
             result = get_resolved_timetable_page(result)
             
             for c in conn:
-                print repr(c)
+                print unicode(c)
 
 
     except UnexpectedPage, e:
